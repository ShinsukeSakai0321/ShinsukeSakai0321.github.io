%!PS-Adobe-2.0 EPSF-2.0
%%Title: Minimum1.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Feb 25 19:17:22 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
798 4872 M
5772 0 V
1.000 UL
LTb
798 4872 M
63 0 V
stroke
714 4872 M
[ [(Helvetica) 140.0 0.0 true true 0 (99.99)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
798 4760 M
5772 0 V
1.000 UL
LTb
798 4760 M
63 0 V
stroke
714 4760 M
[ [(Helvetica) 140.0 0.0 true true 0 (99.9)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
798 4602 M
5772 0 V
1.000 UL
LTb
798 4602 M
63 0 V
stroke
714 4602 M
[ [(Helvetica) 140.0 0.0 true true 0 (99)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
798 4435 M
5772 0 V
1.000 UL
LTb
798 4435 M
63 0 V
stroke
714 4435 M
[ [(Helvetica) 140.0 0.0 true true 0 (95)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
798 4332 M
5772 0 V
1.000 UL
LTb
798 4332 M
63 0 V
stroke
714 4332 M
[ [(Helvetica) 140.0 0.0 true true 0 (90)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
798 4193 M
5772 0 V
1.000 UL
LTb
798 4193 M
63 0 V
stroke
714 4193 M
[ [(Helvetica) 140.0 0.0 true true 0 (80)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
798 4080 M
5772 0 V
1.000 UL
LTb
798 4080 M
63 0 V
stroke
714 4080 M
[ [(Helvetica) 140.0 0.0 true true 0 (70)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
798 3973 M
5772 0 V
1.000 UL
LTb
798 3973 M
63 0 V
stroke
714 3973 M
[ [(Helvetica) 140.0 0.0 true true 0 (60)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
798 3864 M
5772 0 V
1.000 UL
LTb
798 3864 M
63 0 V
stroke
714 3864 M
[ [(Helvetica) 140.0 0.0 true true 0 (50)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
798 3746 M
5772 0 V
1.000 UL
LTb
798 3746 M
63 0 V
stroke
714 3746 M
[ [(Helvetica) 140.0 0.0 true true 0 (40)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
798 3606 M
5772 0 V
1.000 UL
LTb
798 3606 M
63 0 V
stroke
714 3606 M
[ [(Helvetica) 140.0 0.0 true true 0 (30)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
798 3423 M
5772 0 V
1.000 UL
LTb
798 3423 M
63 0 V
stroke
714 3423 M
[ [(Helvetica) 140.0 0.0 true true 0 (20)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
798 3131 M
5772 0 V
1.000 UL
LTb
798 3131 M
63 0 V
stroke
714 3131 M
[ [(Helvetica) 140.0 0.0 true true 0 (10)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
798 2850 M
5772 0 V
1.000 UL
LTb
798 2850 M
63 0 V
stroke
714 2850 M
[ [(Helvetica) 140.0 0.0 true true 0 (5)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
798 2216 M
5772 0 V
1.000 UL
LTb
798 2216 M
63 0 V
stroke
714 2216 M
[ [(Helvetica) 140.0 0.0 true true 0 (1)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
798 1317 M
5772 0 V
1.000 UL
LTb
798 1317 M
63 0 V
stroke
714 1317 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.1)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
798 420 M
5772 0 V
1.000 UL
LTb
798 420 M
63 0 V
stroke
714 420 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.01)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
798 420 M
0 4452 V
1.000 UL
LTb
798 420 M
0 63 V
0 4389 R
0 -63 V
stroke
798 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 6.5)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
1323 420 M
0 4452 V
1.000 UL
LTb
1323 420 M
0 63 V
0 4389 R
0 -63 V
stroke
1323 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 7)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
1847 420 M
0 4452 V
1.000 UL
LTb
1847 420 M
0 63 V
0 4389 R
0 -63 V
stroke
1847 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 7.5)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2372 420 M
0 4452 V
1.000 UL
LTb
2372 420 M
0 63 V
0 4389 R
0 -63 V
stroke
2372 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 8)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2897 420 M
0 4452 V
1.000 UL
LTb
2897 420 M
0 63 V
0 4389 R
0 -63 V
stroke
2897 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 8.5)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3422 420 M
0 4452 V
1.000 UL
LTb
3422 420 M
0 63 V
0 4389 R
0 -63 V
stroke
3422 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 9)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3946 420 M
0 4452 V
1.000 UL
LTb
3946 420 M
0 63 V
0 4389 R
0 -63 V
stroke
3946 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 9.5)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4471 420 M
0 4452 V
1.000 UL
LTb
4471 420 M
0 63 V
0 4389 R
0 -63 V
stroke
4471 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4996 420 M
0 4452 V
1.000 UL
LTb
4996 420 M
0 63 V
0 4389 R
0 -63 V
stroke
4996 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10.5)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5521 420 M
0 4452 V
1.000 UL
LTb
5521 420 M
0 63 V
0 4389 R
0 -63 V
stroke
5521 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 11)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6045 420 M
0 4389 V
0 63 V
1.000 UL
LTb
6045 420 M
0 63 V
0 4389 R
0 -63 V
stroke
6045 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 11.5)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6570 420 M
0 4452 V
1.000 UL
LTb
6570 420 M
0 63 V
0 4389 R
0 -63 V
stroke
6570 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 12)]
] -46.7 MCshow
1.000 UL
LTb
6570 420 M
-63 0 V
stroke
6654 420 M
[ [(Helvetica) 140.0 0.0 true true 0 (-10)]
] -46.7 MLshow
1.000 UL
LTb
6570 762 M
-63 0 V
stroke
6654 762 M
[ [(Helvetica) 140.0 0.0 true true 0 (-9)]
] -46.7 MLshow
1.000 UL
LTb
6570 1105 M
-63 0 V
stroke
6654 1105 M
[ [(Helvetica) 140.0 0.0 true true 0 (-8)]
] -46.7 MLshow
1.000 UL
LTb
6570 1447 M
-63 0 V
stroke
6654 1447 M
[ [(Helvetica) 140.0 0.0 true true 0 (-7)]
] -46.7 MLshow
1.000 UL
LTb
6570 1790 M
-63 0 V
stroke
6654 1790 M
[ [(Helvetica) 140.0 0.0 true true 0 (-6)]
] -46.7 MLshow
1.000 UL
LTb
6570 2132 M
-63 0 V
stroke
6654 2132 M
[ [(Helvetica) 140.0 0.0 true true 0 (-5)]
] -46.7 MLshow
1.000 UL
LTb
6570 2475 M
-63 0 V
stroke
6654 2475 M
[ [(Helvetica) 140.0 0.0 true true 0 (-4)]
] -46.7 MLshow
1.000 UL
LTb
6570 2817 M
-63 0 V
stroke
6654 2817 M
[ [(Helvetica) 140.0 0.0 true true 0 (-3)]
] -46.7 MLshow
1.000 UL
LTb
6570 3160 M
-63 0 V
stroke
6654 3160 M
[ [(Helvetica) 140.0 0.0 true true 0 (-2)]
] -46.7 MLshow
1.000 UL
LTb
6570 3502 M
-63 0 V
stroke
6654 3502 M
[ [(Helvetica) 140.0 0.0 true true 0 (-1)]
] -46.7 MLshow
1.000 UL
LTb
6570 3845 M
-63 0 V
stroke
6654 3845 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MLshow
1.000 UL
LTb
6570 4187 M
-63 0 V
stroke
6654 4187 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MLshow
1.000 UL
LTb
6570 4530 M
-63 0 V
stroke
6654 4530 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MLshow
1.000 UL
LTb
6570 4872 M
-63 0 V
stroke
6654 4872 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3)]
] -46.7 MLshow
1.000 UL
LTb
1.000 UL
LTb
798 420 M
5772 0 V
0 4452 V
-5772 0 V
798 420 L
LTb
140 2646 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (F\(x\)\(%\))]
] -46.7 MCshow
grestore
LTb
7059 2646 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (ln\(ln\(1/\(1-F\)\)\))]
] -46.7 MCshow
grestore
LTb
3684 70 M
[ [(Helvetica) 140.0 0.0 true true 0 (x)]
] -46.7 MCshow
1.000 UP
1.000 UP
1.000 UL
LT0
1008 2212 M
603 272 V
759 159 V
162 115 V
30 88 V
148 73 V
1 63 V
372 54 V
110 48 V
209 43 V
58 39 V
90 36 V
13 33 V
37 31 V
24 29 V
39 28 V
28 26 V
124 24 V
46 23 V
7 23 V
35 21 V
16 20 V
9 20 V
52 19 V
4 18 V
40 18 V
29 17 V
33 17 V
6 16 V
3 16 V
31 15 V
53 15 V
19 15 V
40 14 V
121 14 V
63 14 V
6 14 V
47 13 V
9 13 V
4 13 V
73 12 V
57 12 V
5 13 V
13 12 V
23 12 V
5 11 V
18 12 V
16 11 V
42 12 V
24 11 V
7 11 V
6 11 V
9 11 V
22 11 V
55 11 V
0 10 V
16 11 V
5 11 V
13 10 V
57 11 V
3 10 V
11 11 V
16 10 V
35 11 V
18 10 V
2 11 V
9 10 V
18 11 V
27 10 V
3 11 V
3 11 V
9 10 V
14 11 V
24 11 V
65 11 V
9 11 V
0 11 V
3 12 V
15 11 V
15 12 V
27 12 V
3 12 V
3 13 V
145 12 V
77 13 V
14 14 V
4 14 V
6 14 V
56 15 V
36 15 V
10 17 V
81 17 V
129 19 V
33 20 V
85 21 V
151 25 V
2 28 V
12 33 V
40 42 V
49 64 V
1008 2212 Pls
1611 2484 Pls
2370 2643 Pls
2532 2758 Pls
2562 2846 Pls
2710 2919 Pls
2711 2982 Pls
3083 3036 Pls
3193 3084 Pls
3402 3127 Pls
3460 3166 Pls
3550 3202 Pls
3563 3235 Pls
3600 3266 Pls
3624 3295 Pls
3663 3323 Pls
3691 3349 Pls
3815 3373 Pls
3861 3396 Pls
3868 3419 Pls
3903 3440 Pls
3919 3460 Pls
3928 3480 Pls
3980 3499 Pls
3984 3517 Pls
4024 3535 Pls
4053 3552 Pls
4086 3569 Pls
4092 3585 Pls
4095 3601 Pls
4126 3616 Pls
4179 3631 Pls
4198 3646 Pls
4238 3660 Pls
4359 3674 Pls
4422 3688 Pls
4428 3702 Pls
4475 3715 Pls
4484 3728 Pls
4488 3741 Pls
4561 3753 Pls
4618 3765 Pls
4623 3778 Pls
4636 3790 Pls
4659 3802 Pls
4664 3813 Pls
4682 3825 Pls
4698 3836 Pls
4740 3848 Pls
4764 3859 Pls
4771 3870 Pls
4777 3881 Pls
4786 3892 Pls
4808 3903 Pls
4863 3914 Pls
4863 3924 Pls
4879 3935 Pls
4884 3946 Pls
4897 3956 Pls
4954 3967 Pls
4957 3977 Pls
4968 3988 Pls
4984 3998 Pls
5019 4009 Pls
5037 4019 Pls
5039 4030 Pls
5048 4040 Pls
5066 4051 Pls
5093 4061 Pls
5096 4072 Pls
5099 4083 Pls
5108 4093 Pls
5122 4104 Pls
5146 4115 Pls
5211 4126 Pls
5220 4137 Pls
5220 4148 Pls
5223 4160 Pls
5238 4171 Pls
5253 4183 Pls
5280 4195 Pls
5283 4207 Pls
5286 4220 Pls
5431 4232 Pls
5508 4245 Pls
5522 4259 Pls
5526 4273 Pls
5532 4287 Pls
5588 4302 Pls
5624 4317 Pls
5634 4334 Pls
5715 4351 Pls
5844 4370 Pls
5877 4390 Pls
5962 4411 Pls
6113 4436 Pls
6115 4464 Pls
6127 4497 Pls
6167 4539 Pls
6216 4603 Pls
1.000 UL
LTb
798 420 M
5772 0 V
0 4452 V
-5772 0 V
798 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
