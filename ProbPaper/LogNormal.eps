%!PS-Adobe-2.0 EPSF-2.0
%%Title: LogNormal.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Feb 25 13:00:50 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
798 4872 M
6164 0 V
1.000 UL
LTb
798 4872 M
63 0 V
6101 0 R
-63 0 V
stroke
714 4872 M
[ [(Helvetica) 140.0 0.0 true true 0 (99.99)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
798 4496 M
6164 0 V
1.000 UL
LTb
798 4496 M
63 0 V
6101 0 R
-63 0 V
stroke
714 4496 M
[ [(Helvetica) 140.0 0.0 true true 0 (99.9)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
798 4038 M
6164 0 V
1.000 UL
LTb
798 4038 M
63 0 V
6101 0 R
-63 0 V
stroke
714 4038 M
[ [(Helvetica) 140.0 0.0 true true 0 (99)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
798 3631 M
6164 0 V
1.000 UL
LTb
798 3631 M
63 0 V
6101 0 R
-63 0 V
stroke
714 3631 M
[ [(Helvetica) 140.0 0.0 true true 0 (95)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
798 3413 M
6164 0 V
1.000 UL
LTb
798 3413 M
63 0 V
6101 0 R
-63 0 V
stroke
714 3413 M
[ [(Helvetica) 140.0 0.0 true true 0 (90)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
798 3150 M
6164 0 V
1.000 UL
LTb
798 3150 M
63 0 V
6101 0 R
-63 0 V
stroke
714 3150 M
[ [(Helvetica) 140.0 0.0 true true 0 (80)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
798 2960 M
6164 0 V
1.000 UL
LTb
798 2960 M
63 0 V
6101 0 R
-63 0 V
stroke
714 2960 M
[ [(Helvetica) 140.0 0.0 true true 0 (70)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
798 2798 M
6164 0 V
1.000 UL
LTb
798 2798 M
63 0 V
6101 0 R
-63 0 V
stroke
714 2798 M
[ [(Helvetica) 140.0 0.0 true true 0 (60)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
798 2646 M
6164 0 V
1.000 UL
LTb
798 2646 M
63 0 V
6101 0 R
-63 0 V
stroke
714 2646 M
[ [(Helvetica) 140.0 0.0 true true 0 (50)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
798 2494 M
6164 0 V
1.000 UL
LTb
798 2494 M
63 0 V
6101 0 R
-63 0 V
stroke
714 2494 M
[ [(Helvetica) 140.0 0.0 true true 0 (40)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
798 2332 M
6164 0 V
1.000 UL
LTb
798 2332 M
63 0 V
6101 0 R
-63 0 V
stroke
714 2332 M
[ [(Helvetica) 140.0 0.0 true true 0 (30)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
798 2142 M
6164 0 V
1.000 UL
LTb
798 2142 M
63 0 V
6101 0 R
-63 0 V
stroke
714 2142 M
[ [(Helvetica) 140.0 0.0 true true 0 (20)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
798 1879 M
6164 0 V
1.000 UL
LTb
798 1879 M
63 0 V
6101 0 R
-63 0 V
stroke
714 1879 M
[ [(Helvetica) 140.0 0.0 true true 0 (10)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
798 1661 M
6164 0 V
1.000 UL
LTb
798 1661 M
63 0 V
6101 0 R
-63 0 V
stroke
714 1661 M
[ [(Helvetica) 140.0 0.0 true true 0 (5)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
798 1254 M
6164 0 V
1.000 UL
LTb
798 1254 M
63 0 V
6101 0 R
-63 0 V
stroke
714 1254 M
[ [(Helvetica) 140.0 0.0 true true 0 (1)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
798 796 M
6164 0 V
1.000 UL
LTb
798 796 M
63 0 V
6101 0 R
-63 0 V
stroke
714 796 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.1)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
798 420 M
6164 0 V
1.000 UL
LTb
798 420 M
63 0 V
6101 0 R
-63 0 V
stroke
714 420 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.01)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
798 420 M
0 4452 V
1.000 UL
LTb
798 420 M
0 63 V
0 4389 R
0 -63 V
stroke
798 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
1726 420 M
0 4452 V
1.000 UL
LTb
1726 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
2268 420 M
0 4452 V
1.000 UL
LTb
2268 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
2654 420 M
0 4452 V
1.000 UL
LTb
2654 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
2952 420 M
0 4452 V
1.000 UL
LTb
2952 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
3196 420 M
0 4452 V
1.000 UL
LTb
3196 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
3403 420 M
0 4452 V
1.000 UL
LTb
3403 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
3581 420 M
0 4452 V
1.000 UL
LTb
3581 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
3739 420 M
0 4452 V
1.000 UL
LTb
3739 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
3880 420 M
0 4452 V
1.000 UL
LTb
3880 420 M
0 63 V
0 4389 R
0 -63 V
stroke
3880 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4808 420 M
0 4452 V
1.000 UL
LTb
4808 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
5350 420 M
0 4452 V
1.000 UL
LTb
5350 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
5736 420 M
0 4452 V
1.000 UL
LTb
5736 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
6034 420 M
0 4452 V
1.000 UL
LTb
6034 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
6278 420 M
0 4452 V
1.000 UL
LTb
6278 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
6485 420 M
0 4389 V
0 63 V
1.000 UL
LTb
6485 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
6663 420 M
0 4389 V
0 63 V
1.000 UL
LTb
6663 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
6821 420 M
0 4389 V
0 63 V
1.000 UL
LTb
6821 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
6962 420 M
0 4452 V
1.000 UL
LTb
6962 420 M
0 63 V
0 4389 R
0 -63 V
stroke
6962 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
798 420 M
6164 0 V
0 4452 V
-6164 0 V
798 420 L
LTb
140 2646 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Cumulative probability F\(x\) \(%\))]
] -46.7 MCshow
grestore
LTb
3880 70 M
[ [(Helvetica) 140.0 0.0 true true 0 (x)]
] -46.7 MCshow
1.000 UP
1.000 UL
LT0
3590 3245 M
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
7 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
7 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
7 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
7 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
7 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
7 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
7 0 V
6 0 V
6 0 V
1.000 UL
LT1
3590 2646 M
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
7 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
7 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
7 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
7 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
7 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
7 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
7 0 V
6 0 V
6 0 V
1.000 UL
LT2
3590 2048 M
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
7 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
7 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
7 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
7 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
7 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
7 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
6 0 V
7 0 V
6 0 V
6 0 V
1.000 UP
1.000 UL
LT3
3590 1251 M
53 163 V
12 104 V
2 77 V
12 64 V
0 53 V
32 48 V
9 42 V
20 38 V
5 36 V
9 32 V
1 31 V
4 29 V
2 28 V
4 26 V
3 25 V
13 24 V
5 23 V
1 22 V
4 22 V
2 21 V
1 20 V
6 20 V
0 20 V
5 19 V
3 18 V
4 18 V
0 18 V
1 18 V
3 17 V
7 17 V
2 17 V
5 16 V
15 17 V
8 16 V
1 16 V
6 16 V
1 15 V
1 16 V
10 15 V
8 16 V
1 15 V
1 15 V
3 15 V
1 15 V
3 15 V
2 15 V
6 15 V
4 15 V
1 15 V
1 14 V
1 15 V
3 15 V
9 15 V
0 15 V
2 15 V
1 15 V
2 15 V
9 15 V
1 15 V
1 16 V
3 15 V
6 16 V
3 15 V
0 16 V
1 16 V
3 16 V
5 17 V
0 16 V
1 17 V
1 17 V
3 17 V
4 18 V
11 18 V
2 18 V
0 18 V
0 19 V
3 20 V
3 20 V
5 20 V
1 21 V
0 22 V
28 22 V
15 23 V
3 24 V
1 25 V
1 26 V
11 28 V
8 29 V
2 31 V
18 32 V
30 36 V
8 38 V
21 42 V
39 48 V
0 53 V
4 64 V
11 77 V
14 104 V
3590 1251 Pls
3643 1414 Pls
3655 1518 Pls
3657 1595 Pls
3669 1659 Pls
3669 1712 Pls
3701 1760 Pls
3710 1802 Pls
3730 1840 Pls
3735 1876 Pls
3744 1908 Pls
3745 1939 Pls
3749 1968 Pls
3751 1996 Pls
3755 2022 Pls
3758 2047 Pls
3771 2071 Pls
3776 2094 Pls
3777 2116 Pls
3781 2138 Pls
3783 2159 Pls
3784 2179 Pls
3790 2199 Pls
3790 2219 Pls
3795 2238 Pls
3798 2256 Pls
3802 2274 Pls
3802 2292 Pls
3803 2310 Pls
3806 2327 Pls
3813 2344 Pls
3815 2361 Pls
3820 2377 Pls
3835 2394 Pls
3843 2410 Pls
3844 2426 Pls
3850 2442 Pls
3851 2457 Pls
3852 2473 Pls
3862 2488 Pls
3870 2504 Pls
3871 2519 Pls
3872 2534 Pls
3875 2549 Pls
3876 2564 Pls
3879 2579 Pls
3881 2594 Pls
3887 2609 Pls
3891 2624 Pls
3892 2639 Pls
3893 2653 Pls
3894 2668 Pls
3897 2683 Pls
3906 2698 Pls
3906 2713 Pls
3908 2728 Pls
3909 2743 Pls
3911 2758 Pls
3920 2773 Pls
3921 2788 Pls
3922 2804 Pls
3925 2819 Pls
3931 2835 Pls
3934 2850 Pls
3934 2866 Pls
3935 2882 Pls
3938 2898 Pls
3943 2915 Pls
3943 2931 Pls
3944 2948 Pls
3945 2965 Pls
3948 2982 Pls
3952 3000 Pls
3963 3018 Pls
3965 3036 Pls
3965 3054 Pls
3965 3073 Pls
3968 3093 Pls
3971 3113 Pls
3976 3133 Pls
3977 3154 Pls
3977 3176 Pls
4005 3198 Pls
4020 3221 Pls
4023 3245 Pls
4024 3270 Pls
4025 3296 Pls
4036 3324 Pls
4044 3353 Pls
4046 3384 Pls
4064 3416 Pls
4094 3452 Pls
4102 3490 Pls
4123 3532 Pls
4162 3580 Pls
4162 3633 Pls
4166 3697 Pls
4177 3774 Pls
4191 3878 Pls
1.000 UL
LTb
798 420 M
6164 0 V
0 4452 V
-6164 0 V
798 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
